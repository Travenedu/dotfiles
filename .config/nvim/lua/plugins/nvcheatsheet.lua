local M = { 'smartinellimarco/nvcheatsheet.nvim' }

M.opts = {
  -- Default header
  header = {
    "                                      ",
    "                                      ",
    "                                      ",
    "█▀▀ █ █ █▀▀ █▀█ ▀█▀ █▀ █░█ █▀▀ █▀▀ ▀█▀",
    "█▄▄ █▀█ ██▄ █▀█  █  ▄█ █▀█ ██▄ ██▄  █ ",
    "                                      ",
    "                                      ",
    "                                      ",
  },
  -- Example keymaps (this doesn't create any)
  keymaps = {
    ['Cmp'] = {
      { 'Select entry', '⌃f' },
      { 'Next result - Jump to next snippet placeholder', '⌃n' },
      { 'Previous result - Jump to previous snippet placeholder', '⌃p' },
      { 'Scroll up in preview', '⌃u' },
      { 'Scroll down in preview', '⌃d' },
      { 'Abort autocompletion', '⌃e' },
    },
    ['Comment'] = {
      { 'Comment line toggle',                             'gcc' },
      { 'Comment block toggle',                            'gbc' },
      { 'Comment visual selection',                        'gc' },
      { 'Comment visual selection using block delimiters', 'gb' },
      { 'Comment out text object line wise',               'gc<motion>' },
      { 'Comment out text object block wise',              'gb<motion>' },
      { 'Add comment on the line above',                   'gcO' },
      { 'Add comment on the line below',                   'gco' },
      { 'Add comment at the end of line',                  'gcA' },
    },
    ['Files'] = {
      { 'Smart Find Files', '<leader><space>' },
      { 'File Explorer',    '<leader>fe' },
      { 'Buffers',          '<leader>fb' },
      { 'Find Config File', '<leader>fc' },
      { 'Find Files',       '<leader>ff' },
      { 'Projects',         '<leader>fp' },
      { 'Recent Files',     '<leader>fr' },
      { 'Rename File',      '<leader>fR' },
    },
    ['Search'] = {
      { 'Grep Buffers',                 '<leader>sb' },
      { 'Grep',                         '<leader>sg' },
      { 'Grep Word (visual or normal)', '<leader>sw' },
      { 'Registers',                    '<leader>s"' },
      { 'Search History',               '<leader>s/' },
      { 'Search Lines',                 '<leader>sl' },
      { 'Command History',              '<leader>sc' },
      { 'Commands',                     '<leader>sC' },
      { 'Diagnostics',                  '<leader>sd' },
      { 'Help Pages',                   '<leader>sh' },
      { 'Highlights',                   '<leader>sH' },
      { 'Icons',                        '<leader>si' },
      { 'Jumps',                        '<leader>sj' },
      { 'Keymaps',                      '<leader>sk' },
      { 'Marks',                        '<leader>sm' },
      { 'Man Pages',                    '<leader>sM' },
      { 'Search Plugins',               '<leader>sp' },
      { 'Quickfix List',                '<leader>sq' },
      { 'Resume Search',                '<leader>sR' },
      { 'Undo History',                 '<leader>su' },
    },
    ['Git'] = {
      { 'Git Branches',     '<leader>gb' },
      { 'Git Log',          '<leader>gl' },
      { 'Git Log Line',     '<leader>gL' },
      { 'Git Status',       '<leader>gs' },
      { 'Git Stash',        '<leader>gS' },
      { 'Git Diff (Hunks)', '<leader>gd' },
      { 'Git Log File',     '<leader>gf' },
      { 'Git Browse',       '<leader>gB' },
      { 'Lazygit',          '<leader>gg' },
    },
    ['LSP'] = {
      { 'Goto Definition',     '<leader>ld' },
      { 'Goto Declaration',    '<leader>lD' },
      { 'References',          '<leader>lr' },
      { 'Goto Implementation', '<leader>lI' },
      { 'Type Definition',     '<leader>ly' },
      { 'LSP Symbols',         '<leader>ls' },
      { 'Workspace Symbols',   '<leader>lS' },
    },
    ['Buffer'] = {
      { 'Buffer Diagnostics',    '<leader>bD' },
      { 'Delete Buffer',         '<leader>bd' },
      { 'Toggle Scratch Buffer', '<leader>bs' },
      { 'Select Scratch Buffer', '<leader>bS' },
    },
    ['UI / Misc'] = {
      { 'Colorschemes',          '<leader>CC' },
      { 'Toggle Zen Mode',       '<leader>z' },
      { 'Notification History',  '<leader>n' },
      { 'Dismiss Notifications', '<leader>un' },
      { 'Toggle Terminal',       '<C-/>' },
      { 'Toggle Terminal (alt)', '<C-_>' },
      { 'Next Reference',        ']]' },
      { 'Previous Reference',    '[[' },
    },
    ['Toggles'] = {
      { 'Toggle Spell',           '<leader>us' },
      { 'Toggle Wrap',            '<leader>uw' },
      { 'Toggle Relative Number', '<leader>uL' },
      { 'Toggle Diagnostics',     '<leader>ud' },
      { 'Toggle Line Numbers',    '<leader>ul' },
      { 'Toggle Conceal Level',   '<leader>uc' },
      { 'Toggle Treesitter',      '<leader>uT' },
      { 'Toggle Dark Background', '<leader>ub' },
      { 'Toggle Inlay Hints',     '<leader>uh' },
      { 'Toggle Indent Guides',   '<leader>ug' },
      { 'Toggle Dim',             '<leader>uD' },
    },
    ['General'] = {
      { 'Save File',         '<C-s>' },
      { 'Repeat last macro', 'Q' },
    },

    ['Indenting'] = {
      { 'Inner indent while remaining in visual mode', '<' },
      { 'Outer indent while remaining in visual mode', '>' },
    },

    ['Window'] = {
      { 'Split window vertically',   '<leader>wv' },
      { 'Split window horizontally', '<leader>wh' },
      { 'Make splits equal size',    '<leader>we' },
      { 'Rotate splits',             '<leader>wr' },
      { 'Send split to the right',   '<leader>wh' },
      { 'Send split to the bottom',  '<leader>wj' },
      { 'Send split to the top',     '<leader>wk' },
      { 'Send split to the left',    '<leader>wl' },
      { 'Close current split',       '<leader>wx' },
      { 'Close all other windows',   '<leader>wo' },
    },

    ['Tabs'] = {
      { 'Last Tab',         '<leader><tab>l' },
      { 'Close Other Tabs', '<leader><tab>o' },
      { 'First Tab',        '<leader><tab>f' },
      { 'New Tab',          '<leader><tab><tab>' },
      { 'Next Tab',         '<leader><tab>]' },
      { 'Close Tab',        '<leader><tab>d' },
      { 'Previous Tab',     '<leader><tab>[' },
    },

    ['Clipboard'] = {
      { 'Yank to clipboard',                '<leader>y' },
      { 'Yank line to clipboard',           '<leader>yy' },
      { 'Yank to end of line to clipboard', '<leader>yl' },
      { 'Paste from clipboard',             '<leader>p' },
    },

    ['Noice'] = {
      { 'Dismiss Messages', '<leader>nd' },
    },

    ['Markdown'] = {
      { 'Yank file with filename as heading and wrap in md fence',      '<leader>yf' },
      { 'Yank selection with filename as heading and wrap in markdown', '<leader>ys' },
    },
    ['General'] = {
      { 'Toggle Cheatsheet', '<F2>' },
      { 'Repeat last macro', 'Q' },
      { 'Save File', '<C-s>' },
      { 'Dismiss Noice messages', '<leader>nd' },
      { 'Yank file with filename as heading in markdown', '<leader>mf' },
      { 'Yank selection with filename as heading in markdown', '<leader>ms' },
      { 'Cellular Automaton: Make it rain', '<leader>fml' },
    },
    ['Window Management'] = {
      { 'Split window vertically', '<leader>wv' },
      { 'Split window horizontally', '<leader>wh' },
      { 'Make splits equal size', '<leader>we' },
      { 'Rotate splits', '<leader>wr' },
      { 'Close current split', '<leader>wx' },
      { 'Close all other windows', '<leader>wo' },
    },
    ['Tab Management'] = {
      { 'Go to Last Tab', '<leader><tab>l' },
      { 'Close Other Tabs', '<leader><tab>o' },
      { 'Go to First Tab', '<leader><tab>f' },
      { 'New Tab', '<leader><tab><tab>' },
      { 'Go to Next Tab', '<leader><tab>]' },
      { 'Close Current Tab', '<leader><tab>d' },
      { 'Go to Previous Tab', '<leader><tab>[' },
    },
    ['Yanking and Pasting'] = {
      { 'Yank selection to clipboard', '<leader>y' },
      { 'Yank current line to clipboard', '<leader>yy' },
      { 'Yank to end of line to clipboard', '<leader>yl' },
      { 'Paste from clipboard', '<leader>p' },
    },
    ['LSP (Language Server Protocol)'] = {
      { 'Show documentation (hover)', 'K' },
      { 'Go to definition', 'gd' },
      { 'Show code actions', '<leader>ca' },
      { 'Format file', '<leader>gf' },
    },
    ['Harpoon'] = {
      { 'Add file to harpoon list', '<leader>a' },
      { 'Open Harpoon Menu', '<C-e>' },
      { 'Go to harpoon mark 1', '<C-1>' },
      { 'Go to harpoon mark 2', '<C-2>' },
      { 'Go to harpoon mark 3', '<C-3>' },
      { 'Go to harpoon mark 4', '<C-4>' },
      { 'Go to previous harpoon mark', '<C-h>' },
      { 'Go to next harpoon mark', '<C-l>' },
    },
    ['Snipe'] = {
      { 'Open Snipe buffer menu', 'gb' },
    },
    ['Snacks'] = {
        { 'Smart Find Files', '<leader><space>' },
        { 'File Explorer', '<leader>fe' },
        { 'Buffers', '<leader>fb' },
        { 'Find Config File', '<leader>fc' },
        { 'Find Files', '<leader>ff' },
        { 'Projects', '<leader>fp' },
        { 'Recent', '<leader>fr' },
        { 'Rename File', '<leader>fR' },
        { 'Grep Open Buffers', '<leader>sb' },
        { 'Grep', '<leader>sg' },
        { 'Visual selection or word', '<leader>sw' },
        { 'Registers', '<leader>s"' },
        { 'Search History', '<leader>s/' },
        { 'Search Lines', '<leader>sl' },
        { 'Command History', '<leader>sc' },
        { 'Commands', '<leader>sC' },
        { 'Diagnostics', '<leader>sd' },
        { 'Help Pages', '<leader>sh' },
        { 'Highlights', '<leader>sH' },
        { 'Icons', '<leader>si' },
        { 'Jumps', '<leader>sj' },
        { 'Keymaps', '<leader>sk' },
        { 'Marks', '<leader>sm' },
        { 'Man Pages', '<leader>sM' },
        { 'Search for Plugin Spec', '<leader>sp' },
        { 'Quickfix List', '<leader>sq' },
        { 'Resume', '<leader>sR' },
        { 'Undo History', '<leader>su' },
        { 'Git Branches', '<leader>gb' },
        { 'Git Log', '<leader>gl' },
        { 'Git Log Line', '<leader>gL' },
        { 'Git Status', '<leader>gs' },
        { 'Git Stash', '<leader>gS' },
        { 'Git Diff (Hunks)', '<leader>gd' },
        { 'Git Log File', '<leader>gf' },
        { 'Goto Definition', '<leader>ld' },
        { 'Goto Declaration', '<leader>lD' },
        { 'References', '<leader>lr' },
        { 'Goto Implementation', '<leader>lI' },
        { 'Goto T[y]pe Definition', '<leader>ly' },
        { 'LSP Symbols', '<leader>ls' },
        { 'LSP Workspace Symbols', '<leader>lS' },
        { 'Buffer Diagnostics', '<leader>bD' },
        { 'Delete Buffer', '<leader>bd' },
        { 'Toggle Scratch Buffer', '<leader>bs' },
        { 'Select Scratch Buffer', '<leader>bS' },
        { 'Colorschemes', '<leader>CC' },
        { 'Toggle Zen Mode', '<leader>z' },
        { 'Notification History', '<leader>n' },
        { 'Git Browse', '<leader>gB' },
        { 'Lazygit', '<leader>gg' },
        { 'Dismiss All Notifications', '<leader>un' },
        { 'Toggle Terminal', '<c-/>' },
        { 'Next Reference', ']]' },
        { 'Prev Reference', '[[' },
        { 'Toggle Spelling', '<leader>ts' },
        { 'Toggle Wrap', '<leader>tw' },
        { 'Toggle Relative Number', '<leader>tL' },
        { 'Toggle Diagnostics', '<leader>td' },
        { 'Toggle Line Number', '<leader>tl' },
        { 'Toggle Conceal Level', '<leader>tc' },
        { 'Toggle Treesitter', '<leader>tT' },
        { 'Toggle Dark Background', '<leader>tb' },
        { 'Toggle Inlay Hints', '<leader>th' },
        { 'Toggle Indent', '<leader>tg' },
        { 'Toggle Dim', '<leader>tD' },
    },
    ['Default: Motion'] = {
      { 'Move cursor left', 'h' },
      { 'Move cursor down', 'j' },
      { 'Move cursor up', 'k' },
      { 'Move cursor right', 'l' },
      { 'Move to start of next word', 'w' },
      { 'Move to start of previous word', 'b' },
      { 'Move to end of word', 'e' },
      { 'Go to first line', 'gg' },
      { 'Go to last line', 'G' },
      { 'Go to beginning of line', '0' },
      { 'Go to end of line', '$' },
      { 'Find next character', 'f{char}' },
      { 'Find previous character', 'F{char}' },
      { 'Jump to matching bracket', '%' },
    },
    ['Default: Editing'] = {
      { 'Insert mode', 'i' },
      { 'Insert mode after cursor', 'a' },
      { 'Insert at beginning of line', 'I' },
      { 'Insert at end of line', 'A' },
      { 'Open new line below', 'o' },
      { 'Open new line above', 'O' },
      { 'Delete', 'd' },
      { 'Change', 'c' },
      { 'Yank (copy)', 'y' },
      { 'Paste after cursor', 'p' },
      { 'Paste before cursor', 'P' },
      { 'Delete character', 'x' },
      { 'Undo', 'u' },
      { 'Redo', '<C-r>' },
      { 'Repeat last command', '.' },
    },
    ['Default: Visual Mode'] = {
      { 'Start visual mode', 'v' },
      { 'Start visual line mode', 'V' },
      { 'Start visual block mode', '<C-v>' },
      { 'Reselect last visual selection', 'gv' },
    },
    ['Default: Folds'] = {
      { 'Create fold', 'zf' },
      { 'Open fold', 'zo' },
      { 'Close fold', 'zc' },
      { 'Toggle fold', 'za' },
      { 'Open all folds', 'zR' },
      { 'Close all folds', 'zM' },
    },
    ['Default: Search & Replace'] = {
      { 'Search forward', '/' },
      { 'Search backward', '?' },
      { 'Next search result', 'n' },
      { 'Previous search result', 'N' },
    },

  },
}

function M.config(_, opts)
  local nvcheatsheet = require('nvcheatsheet')

  nvcheatsheet.setup(opts)

  -- You can also close it with <Esc>
  vim.keymap.set('n', '<F2>', nvcheatsheet.toggle)
end

return M

-- vim: ts=2 sts=2 sw=2 et
